apiVersion: v1
kind: Service
metadata:
  name: frontend-{{ include "monsterchart.fullname" . }}
  labels:
    app: monsterstack
spec:
  ports:
    - port: 5000
  selector:
    app: monsterstack
    partie: frontend-{{ include "monsterchart.fullname" . }}
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-{{ include "monsterchart.fullname" . }}
  labels:
    app: monsterstack
spec:
  selector:
    matchLabels:
      app: monsterstack
      partie: frontend-{{ include "monsterchart.fullname" . }}
  strategy:
    type: Recreate
  replicas: 3
  template:
    metadata:
      labels:
        app: monsterstack
        partie: frontend-{{ include "monsterchart.fullname" . }}
    spec:
      containers:
      - name: frontend
        image: {{ .Values.frontend.image.name }}:{{ .Values.frontend.image.tag }}
        ports:
        - containerPort: 5000
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        env:
        - name: CONTEXT
          value: DEV
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "300m"
            memory: "200Mi"